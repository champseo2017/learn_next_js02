const LoadingPage = () => {
  return (
    <div>
      <button className="btn loading">loading</button>
    </div>
  );
};

export default LoadingPage;
/* 
หัวข้อ: พฤติกรรมและขอบเขตของ loading.jsx ใน Next.js

สิ่งที่น่าสังเกตคือ `loading.jsx` ใน Next.js มีพฤติกรรมและขอบเขตเฉพาะ:

1. การโหลดครั้งแรก: คอมโพเนนต์ `loading.jsx` จะถูกแสดงเฉพาะครั้งแรกที่โหลดหน้าเว็บ เมื่อผู้ใช้ไปยังหน้าเว็บเป็นครั้งแรก และมีการดึงข้อมูลแบบอะซิงโครนัส คอมโพเนนต์ `loading.jsx` จะถูกแสดงในขณะที่กำลังดึงข้อมูล อย่างไรก็ตาม เมื่อมีการไปยังหน้าเดิมอีกครั้ง คอมโพเนนต์ `loading.jsx` จะไม่ถูกแสดงอีก แม้ว่าจะมีการดำเนินการแบบอะซิงโครนัส เนื่องจาก Next.js จะแคชข้อมูลที่ดึงมาไว้ ทำให้ข้อมูลพร้อมใช้งานทันทีสำหรับการเข้าชมหน้าเว็บในครั้งต่อๆ ไป

2. การทำงานฝั่งเซิร์ฟเวอร์: คอมโพเนนต์ `loading.jsx` จะถูกเรียกใช้งานเฉพาะบนฝั่งเซิร์ฟเวอร์เท่านั้น เมื่อมีการร้องขอหน้าเว็บ Next.js จะเรนเดอร์หน้าเว็บบนเซิร์ฟเวอร์และส่ง HTML ที่สร้างขึ้นไปยังไคลเอนต์ ในระหว่างกระบวนการเรนเดอร์ฝั่งเซิร์ฟเวอร์นี้ หากมีการดึงข้อมูลแบบอะซิงโครนัส คอมโพเนนต์ `loading.jsx` จะถูกเรนเดอร์บนเซิร์ฟเวอร์และรวมอยู่ใน HTML ที่ส่งไปยังไคลเอนต์ ซึ่งทำให้สถานะการโหลดถูกแสดงต่อผู้ใช้ทันทีในขณะที่กำลังดึงข้อมูลบนเซิร์ฟเวอร์

ลักษณะการทำงานฝั่งเซิร์ฟเวอร์ของ `loading.jsx` ช่วยให้มั่นใจได้ว่าสถานะการโหลดจะปรากฏต่อผู้ใช้โดยเร็วที่สุดเท่าที่จะเป็นไปได้ แม้ก่อนที่ JavaScript ฝั่งไคลเอนต์จะถูกโหลดและเรียกใช้งาน สิ่งนี้ช่วยให้ผู้ใช้มีประสบการณ์การใช้งานที่ดีขึ้นโดยแสดงตัวบ่งชี้การโหลดโดยไม่มีการหน่วงเวลา

อย่างไรก็ตาม สิ่งสำคัญคือต้องทราบว่า `loading.jsx` ไม่ใช่คอมโพเนนต์แบบอินเทอร์แอกทีฟและไม่สามารถตอบสนองต่อการกระทำของผู้ใช้หรืออัปเดตแบบไดนามิกได้ มันเป็นเพียงการแสดงผลสถานะการโหลดแบบคงที่ซึ่งถูกเรนเดอร์บนเซิร์ฟเวอร์และส่งไปยังไคลเอนต์

หากคุณต้องการแสดงสถานะการโหลดสำหรับการนำทางฝั่งไคลเอนต์ในภายหลังหรือจัดการสถานการณ์การโหลดแบบไดนามิกมากขึ้น คุณจะต้องดำเนินการแยกต่างหากโดยใช้เทคนิคฝั่งไคลเอนต์ เช่น การเรนเดอร์แบบมีเงื่อนไข หรือใช้ไลบรารีจัดการสถานะ เช่น `useState` หรือ `useEffect` ของ React

โดยสรุป `loading.jsx` ใน Next.js ถูกออกแบบมาเพื่อจัดการสถานะการโหลดเริ่มต้นของหน้าเว็บในระหว่างการเรนเดอร์ฝั่งเซิร์ฟเวอร์ ซึ่งช่วยให้ผู้ใช้มีประสบการณ์การโหลดที่ราบรื่นเมื่อเข้าชมหน้าเว็บที่มีการดึงข้อมูลแบบอะซิงโครนัสเป็นครั้งแรก ขอบเขตของ `loading.jsx` จะถูกจำกัดเฉพาะการโหลดหน้าเว็บครั้งแรกและการทำงานฝั่งเซิร์ฟเวอร์เท่านั้น
*/
